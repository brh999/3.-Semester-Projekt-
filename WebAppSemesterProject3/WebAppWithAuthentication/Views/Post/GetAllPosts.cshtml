@model IEnumerable<Models.Post>
@using System.Security.Claims
@using Models

@{
    ViewData["Title"] = "Index";
    var message = ViewData["message"];
}
<script>
    user = ViewData["user"]
</script>

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #1a1a1a;
        color: #ffffff;
        padding: 20px;
    }

    h1 {
        color: #66ccff;
        margin-bottom: 20px;
    }

    a {
        color: #66ccff;
        text-decoration: none;
        font-weight: bold;
    }

        a:hover {
            text-decoration: underline;
        }

    label {
        font-size: 30px;
        margin-top: 20px;
        display: block;
        color: #66ccff;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
        background-color: #1a1a1a;
        border: 1px solid #666666;
        border-radius: 5px;
        color: #ffffff;
    }

        .table th,
        .table td {
            border: 1px solid #666666;
            padding: 12px;
            text-align: left;
        }

        .table th {
            background-color: #0d0d0d;
            color: #66ccff;
        }

        .table tbody tr:hover {
            background-color: #333333;
        }

        .table a {
            color: #66ccff;
            text-decoration: none;
            font-weight: bold;
        }

            .table a:hover {
                text-decoration: underline;
            }

    .actions-column {
        width: 150px;
    }
</style>


<h1>- Bids & Offers -</h1>


<!-- Message system for telling the user whether they have successfully bought an offer or not.
     Each number represents a message
-->
<div>
@if (message != null)
{
    switch (message)
    {
        case 1:
                <label>Successfully bought offer!</label>
            break;

        case 2:
                <label>Offer was already bought..</label>
            break;
    }
}
</div>

<p>
    <a asp-action="CreateOffer">Create Offer</a>
</p>

<label>Bids:</label>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th class="actions-column">
                - Actions -
            </th>
        </tr>
    </thead>
    <tbody>
        @if (ViewData["bids"] != null)
        {
            @foreach (var item in ViewData["bids"] as List<Post>)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Currency.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        <!-- Add any actions related to bids here -->
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<label>Offers:</label>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th class="actions-column">
                - Actions -
            </th>
        </tr>
    </thead>
    <tbody>
        @if (ViewData["offers"] != null)
        {
            @foreach (var item in ViewData["offers"] as List<Post>)
            {
                @if (!item.IsComplete)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Currency.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.ActionLink("Buy", "BuyOffer", "Post", new { offerAmount = item.Amount, offerPrice = item.Price, offerCurrency = item.Currency.Type, offerID = item.Id }, null)
                        </td>
                    </tr>
                }
            }
        }
    </tbody>
</table>
