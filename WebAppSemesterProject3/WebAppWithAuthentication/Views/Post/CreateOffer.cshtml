@model Models.Offer
@using Models;


@{
    ViewData["Title"] = "CreateOffer";
    Models.DTO.AccountDto account = ViewData["account"] as Models.DTO.AccountDto;
    List<SelectListItem> listItems = new List<SelectListItem>();

    if(account.Wallet != null)
    {
        foreach (var item in account.Wallet)
        {
            listItems.Add(new SelectListItem
                    {

                        Text = $"{item.Amount.ToString()} {item.Currency.Type}",
                        Value = item.Currency.Type

                    });
        }
    }

}

<h1>CreateOffer</h1>

<h4>Offer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (listItems.Count > 0)
        {
            <form asp-action="CreateOffer" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <p>Wallet</p>
                
                    @Html.DropDownListFor(model => model.Currency.Type, listItems, new { @class = "form-control" })
                
                <span asp-validation-for="Currency" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="CreateOffer" class="btn btn-primary" />
            </div>
            </form>
        }
        else
        {
            <p>Wallet is empty</p>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
